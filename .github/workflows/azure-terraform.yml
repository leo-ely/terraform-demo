name: 'Terraform Azure deployment'

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: read
  id-token: write

env:
  ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
  TF_VAR_location: ${{ vars.AZURE_LOCATION }}

jobs:
  terraform-plan:
    name: 'Terraform Plan'
    runs-on: ubuntu-latest
    environment: azure-production
    concurrency: azure-production
    defaults:
      run:
        shell: bash
        working-directory: ./.terraform/azure
    env:
      ARM_SKIP_PROVIDER_REGISTRATION: true

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
      - name: Create Backend configuration
        run: |
          echo 'container_name = "${{ vars.AZURE_TF_STATE_CONTAINER_NAME }}"' >> configure.azurerm.tfbackend
          echo 'key = "terraform.tfstate"' >> configure.azurerm.tfbackend
          echo 'resource_group_name = "${{ vars.AZURE_TF_STATE_RG_NAME }}"' >> config.azurerm.tfbackend
          echo 'storage_account_name = "${{ vars.AZURE_TF_STATE_SA_NAME }}"' >> configure.azurerm.tfbackend
          echo 'use_oidc = true' >> config.azurerm.tfbackend

      - name: Terraform Init
        run: terraform init -backend-config=config.azurerm.tfbackend
      - name: Terraform Format
        run: terraform fmt -check
      - name: Terraform Validate
        run: terraform validate -no-color

      - name: Terraform Plan
        run: terraform plan -input=false -out=tfplan
      - name: Upload Terraform Plan
        uses: actions/upload-artifact@v4
        with:
          name: tfplan
          path: ./.terraform/azure/tfplan

  terraform-apply:
    name: 'Terraform Apply'
    needs: [ terraform-plan ]
    if: github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    environment: azure-production
    concurrency: azure-production
    defaults:
      run:
        shell: bash
        working-directory: ./.terraform/azure

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
      - name: Create Backend configuration
        run: |
          echo 'container_name = "${{ vars.AZURE_TF_STATE_CONTAINER_NAME }}"' >> configure.azurerm.tfbackend
          echo 'key = "terraform.tfstate"' >> configure.azurerm.tfbackend
          echo 'resource_group_name = "${{ vars.AZURE_TF_STATE_RG_NAME }}"' >> config.azurerm.tfbackend
          echo 'storage_account_name = "${{ vars.AZURE_TF_STATE_SA_NAME }}"' >> configure.azurerm.tfbackend
          echo 'use_oidc = true' >> config.azurerm.tfbackend

      - name: Terraform Init
        run: terraform init -backend-config=config.azurerm.tfbackend
      - name: Download Terraform Plan
        uses: actions/download-artifact@v4
        with:
          name: tfplan
      - name: Terraform Apply
        run: terraform apply -auto-approve tfplan -input=false
